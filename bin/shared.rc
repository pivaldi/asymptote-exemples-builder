#!/bin/bash

## Because this script will be sourced to use common defined variables
# shellcheck disable=SC2034

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)

. "$SCRIPT_DIR/config.rc" || {
  echo "The builder is not configured."
  echo "Please, launch the command ./configure"
  exit 1
}

. "$SCRIPT_DIR/lib/lib.sh" || exit 1

DEBUG=yes
DATE=$(LANG=US date +"2011-01-01 %T")
DATE_CURRENT=$(LANG=US date +"%Y-%m-%d %T")

# export LANG=C.UTF-8
# export LANG="fr_FR.UTF-8"

## Default picture output format
EXTIMAG="webp"

# ASYOPTION="-render=8 -maxviewport=1000 -noprc -glOptions=-iconic "
# ASY_CMD=/usr/local/asymptote/bin/asy
# ASYOPTION="-render=8 -noprc -maxtile=\(900,900\) "
ASYOPTION="-noprc "

[ -z $ROOT_PROJECT_DIR ] && {
  echo 'ROOT_PROJECT_DIR environment variable is not set.'
  echo "Use the command line 'ROOT_PROJECT_DIR=/xxx/xxx $0'"
  exit 1
}

## https://stackoverflow.com/questions/1848415/remove-slash-from-the-end-of-a-variable
case $ROOT_PROJECT_DIR in *[!/]*/) ROOT_PROJECT_DIR=${ROOT_PROJECT_DIR%"${ROOT_PROJECT_DIR##*[!/]}"} ;; esac

ROOT_PROJECT_DIR="${ROOT_PROJECT_DIR}/"

function create_dir_if_not_exists() {
  [ -e "$1" ] || {
    mkdir -p "$1" || exit 1
  }
}

TMP_PROJECT_DIR="${ROOT_PROJECT_DIR}tmp/"
create_dir_if_not_exists "$TMP_PROJECT_DIR"

## The source assets directory
ASSET_DIR="${ROOT_PROJECT_DIR}asset/"
## Asymptote Exemples directory
SOURCE_DIR="${ROOT_PROJECT_DIR}src/"
## Build export dir
BUILD_DIR="${ROOT_PROJECT_DIR}build/" # Doit se terminer par un '/'
create_dir_if_not_exists "$BUILD_DIR"

# The list of topics to handle
TOPICS=$(cd "${SOURCE_DIR}" && find -mindepth 1 -maxdepth 1 ! -path ./modules ! -path ./.git ! -path ./bin -type d -print | sed 's!^\./!!g' | sort -n)
# Directory where to write the xml files
BUILD_XML_DIR="${BUILD_DIR}xml/"
create_dir_if_not_exists "$BUILD_XML_DIR"
# Directory where to write the html files
BUILD_HTML_DIR="${BUILD_DIR}html/"
create_dir_if_not_exists "$BUILD_HTML_DIR"
# Directory where to write the md/hexo files
BUILD_MD_HEXO_DIR="${BUILD_DIR}md/hexo/"
BUILD_MD_HEXO_MEDIA_DIR="${BUILD_MD_HEXO_DIR}media/asymptote/"
BUILD_MD_HEXO_PAGE_DIR="${BUILD_MD_HEXO_DIR}page/"
BUILD_MD_HEXO_POST_DIR="${BUILD_MD_HEXO_DIR}post/"
create_dir_if_not_exists "$BUILD_MD_HEXO_POST_DIR"
create_dir_if_not_exists "$BUILD_MD_HEXO_PAGE_DIR"

# Directory, where the generated asy pictures and colored codes live
BUILD_ASY_DIR="${BUILD_DIR}asy/"

# Retrieve the content of the file $1
# inside the html tags <$2> and </$2>
function inner-tag() {
  awk -v FS="^Z" "/<$2>/,/<\/$2>/" <"$1" | sed "s/<\/*$2>//g"
}

# Retrive the asy fig source files in the directory $1
function get_asy_files() {
  find "$1" -maxdepth 1 -name 'fig*\.asy' -type f -print | sort
}

# Synchronize asy src examples' dir to local tmp dir
function sync-src-dir-to-tmp-dir() {
  [ -e "${SOURCE_DIR}" ] || {
    echo "${SOURCE_DIR} does not exist"
    die 1
  }

  create_dir_if_not_exists "$TMP_PROJECT_DIR"

  rsync -auv \
    --exclude='.git' --exclude='/bin' --exclude='all-tag.txt' \
    --exclude='README.md' "$SOURCE_DIR" "${TMP_PROJECT_DIR}"
}

# Retrive the source asy exemple of $1 subdir for compilation (local tmp directory)
function get-src-dir() {
  SRC_DIR="${TMP_PROJECT_DIR}$1/"

  [ -e "$SRC_DIR" ] || {
    echo "$SRC_DIR does not exist"
    die 1
  }

  echo "$SRC_DIR"
}

## Add copyright to image $1. If $2 given output to $2
function addCopyright() {
  # magick -size 140x80 xc:none -fill grey -gravity NorthWest -draw "text 10,10 "piprime.fr" " -gravity SouthEast -draw "text 5,15 "Copyright" " -rotate -45 miff:- | composite -tile - "$1" "$2"
  ficssext=${1%.*}
  ext=${1##*.}

  if [ "$ext" = "gif" ]; then
    addCopyrightToGif "$1"
    return
  fi

  out_tmp="${ficssext}_copyrigthed"
  out="$1"
  [ -z "$2" ] || out="$2"
  TEXT='www.piprime.fr  www.piprime.fr  www.piprime.fr  www.piprime.fr  www.piprime.fr  www.piprime.fr  www.piprime.fr  www.piprime.fr'

  {
    magick "$1" -set option:dims "%[fx:2*w]x%[fx:2*h]" \
      \( \
      \( -background none -font Arial -pointsize 18 -fill grey75 \
      label:"$TEXT" \) \
      \( -background none -font Arial -pointsize 18 -fill grey95 \
      label:"$TEXT" -roll +50+0 \) \
      -smush 20 -write mpr:text +delete \
      \) \
      \( mpr:text -background none -gravity south -splice 0x20 \
      -write mpr:tile +delete \) \
      \( -size "%[dims]" tile:mpr:tile -rotate -45 \) \
      -gravity center -compose over -composite "$out_tmp" && {
      mv -f "$out_tmp" "$out"
    }
  } || exit 1
}

## Add copyright to image $1
function addCopyrightToGif() {
  CURRDIR=$(pwd)
  filename=$(basename "$1")
  ficssext=${filename%.*}

  DIR=$(mktemp --directory --suffix='-asy-buidler')
  echo "Entering into temp directory $DIR"
  cp "$1" "$DIR" || exit 1
  cd "$DIR" || exit 1

  magick "$filename" "${ficssext}.png"

  find . -name "*.png" | while read -r file; do
    ## Don't add png whil lopping on png !
    addCopyright "$file" "${file}.@"
  done || exit 1

  ## remoge the original png
  find . -name "*.png" -exec rm {} ';'

  ## Rename without the extension @
  find . -name "*.@" | while read -r file; do
    fe=${file%.*}
    mv "$file" "${fe}"
  done || exit 1

  imgNb=$(find . -name '*.png' -print | wc -l)
  imgNb=$((imgNb - 1))

  magick "${ficssext}-%d.png[0-${imgNb}]" "${filename}"
  cd "$CURRDIR" || exit 1

  cp "${DIR}/${filename}" "$1"
  rm -rf "$DIR"
}
