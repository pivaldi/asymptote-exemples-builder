#!/bin/bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
PARENT_DIR=$( cd -- "${SCRIPT_DIR}/.." &> /dev/null && pwd )

BIN_DIR="${SCRIPT_DIR}/bin"

. "${BIN_DIR}/confirm.rc" || exit 1

export ROOT_PROJECT_DIR="$SCRIPT_DIR"
CONFIG_FILE="${BIN_DIR}/config.rc"

read_path() {
  read -e -p "" -i "$1" $2
}

must_installed() {
  type $1 &> /dev/null || {
    echo "The command '$1' is not found. Please, install it : $2"
    exit 1
  }
}


must_installed pygmentize "https://pygments.org/download/"
must_installed asy "https://asymptote.sourceforge.io/"
must_installed make "apt install make # For Debian like OS"
must_installed convert "apt install imagemagick # For Debian like OS"
must_installed identify "apt install imagemagick # For Debian like OS"
must_installed pdftk "apt install pdftk # For Debian like OS"
must_installed pdfinfo "apt install poppler-utils # For Debian like OS"

[ -e "$CONFIG_FILE" ] && {
  echo "The file $CONFIG_FILE already exists…"
  echo -n "Do you want to overwrite it ? "
  confirm || {
    echo "Ok, configuration is aborted…"
    exit 1
  }
}

git submodule update --init || exit 1

ASY_CMD=$(which asy)
echo -n "Enter the absolute path to the Asymptote command : "
read_path "$ASY_CMD" ASY_CMD

XSLTPROC_CMD=$(which xsltproc)
echo -n "Enter the absolute path to the xsltproc command : "
read_path "$XSLTPROC_CMD" XSLTPROC_CMD

CONVERT_CMD=$(which convert)
echo -n "Enter the absolute path to the convert command : "
read_path "$CONVERT_CMD" CONVERT_CMD

PYGMENTYZE_CMD=$(which pygmentize)
echo -n "Enter the absolute path to the pygmentize command : "
read_path "$PYGMENTYZE_CMD" PYGMENTYZE_CMD

echo "ROOT_PROJECT_DIR='$ROOT_PROJECT_DIR'" >> "$CONFIG_FILE"
echo "ASY_CMD='$ASY_CMD'" >> "$CONFIG_FILE"
echo "XSLTPROC_CMD='$XSLTPROC_CMD'" >> "$CONFIG_FILE"
echo "CONVERT_CMD='$CONVERT_CMD'" >> "$CONFIG_FILE"
echo "PYGMENTYZE_CMD='$PYGMENTYZE_CMD'" >> "$CONFIG_FILE"

$BIN_DIR/mkdirs.sh || exit 1

echo -e "\nDone !"
